# Generated by Django 5.1.5 on 2025-07-08 19:30

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название группы или класса",
                        max_length=100,
                        verbose_name="Название группы",
                    ),
                ),
                (
                    "max_students",
                    models.PositiveIntegerField(
                        default=25,
                        help_text="Максимальное количество студентов в группе",
                        verbose_name="Максимум студентов",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        help_text="Дата начала обучения группы",
                        verbose_name="Дата начала обучения",
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="Плановая дата окончания обучения",
                        null=True,
                        verbose_name="Дата окончания обучения",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Группа активна и обучается",
                        verbose_name="Активна",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создана"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлена"),
                ),
                (
                    "curator",
                    models.ForeignKey(
                        blank=True,
                        help_text="Куратор группы",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="curated_groups",
                        to="core.teacher",
                        verbose_name="Куратор",
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        help_text="Ступень обучения группы",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="groups",
                        to="core.level",
                        verbose_name="Ступень",
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        blank=True,
                        help_text="Типовой пакет курсов для группы",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="groups",
                        to="core.package",
                        verbose_name="Пакет курсов",
                    ),
                ),
                (
                    "subsidiary",
                    models.ForeignKey(
                        help_text="Филиал, в котором обучается группа",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="groups",
                        to="core.subsidiary",
                        verbose_name="Филиал",
                    ),
                ),
            ],
            options={
                "verbose_name": "Группа",
                "verbose_name_plural": "Группы",
                "ordering": ["subsidiary__name", "level__order", "name"],
                "unique_together": {("subsidiary", "name")},
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "student_id",
                    models.CharField(
                        help_text="Уникальный номер студента",
                        max_length=50,
                        unique=True,
                        verbose_name="Номер студента",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="Имя студента", max_length=100, verbose_name="Имя"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        help_text="Фамилия студента",
                        max_length=100,
                        verbose_name="Фамилия",
                    ),
                ),
                (
                    "middle_name",
                    models.CharField(
                        blank=True,
                        help_text="Отчество студента",
                        max_length=100,
                        verbose_name="Отчество",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        help_text="Дата рождения студента", verbose_name="Дата рождения"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Электронная почта студента",
                        max_length=254,
                        verbose_name="Email",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Контактный телефон",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Номер телефона должен быть в формате: '+999999999'. До 15 цифр.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Телефон",
                    ),
                ),
                (
                    "parent_name",
                    models.CharField(
                        blank=True,
                        help_text="Полное имя родителя/законного представителя",
                        max_length=200,
                        verbose_name="ФИО родителя",
                    ),
                ),
                (
                    "parent_phone",
                    models.CharField(
                        blank=True,
                        help_text="Контактный телефон родителя",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Номер телефона должен быть в формате: '+999999999'. До 15 цифр.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Телефон родителя",
                    ),
                ),
                (
                    "parent_email",
                    models.EmailField(
                        blank=True,
                        help_text="Электронная почта родителя",
                        max_length=254,
                        verbose_name="Email родителя",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True, help_text="Домашний адрес", verbose_name="Адрес"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Дополнительные заметки о студенте",
                        verbose_name="Примечания",
                    ),
                ),
                (
                    "enrollment_date",
                    models.DateField(
                        help_text="Дата зачисления в школу",
                        verbose_name="Дата зачисления",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Студент активен и обучается",
                        verbose_name="Активен",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлён"),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        help_text="Группа, в которой обучается студент",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="students",
                        to="groups.group",
                        verbose_name="Группа",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        help_text="Связанный пользователь системы (опционально)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Студент",
                "verbose_name_plural": "Студенты",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="GroupCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hours_per_week",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Количество академических часов в неделю",
                        verbose_name="Часов в неделю",
                    ),
                ),
                (
                    "total_hours",
                    models.PositiveIntegerField(
                        help_text="Общее количество часов курса для группы",
                        verbose_name="Общее количество часов",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        help_text="Дата начала изучения курса",
                        verbose_name="Дата начала",
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="Плановая дата окончания курса",
                        null=True,
                        verbose_name="Дата окончания",
                    ),
                ),
                (
                    "completed_hours",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Количество пройденных часов",
                        verbose_name="Пройдено часов",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Курс активен для группы",
                        verbose_name="Активен",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлён"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        help_text="Изучаемый курс",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_courses",
                        to="core.course",
                        verbose_name="Курс",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Группа, которая изучает курс",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_courses",
                        to="groups.group",
                        verbose_name="Группа",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        help_text="Преподаватель, ведущий курс",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="group_courses",
                        to="core.teacher",
                        verbose_name="Преподаватель",
                    ),
                ),
            ],
            options={
                "verbose_name": "Курс группы",
                "verbose_name_plural": "Курсы групп",
                "ordering": ["group", "course__subject__name", "course__name"],
                "unique_together": {("group", "course")},
            },
        ),
    ]
