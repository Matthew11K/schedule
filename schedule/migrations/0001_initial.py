# Generated by Django 5.1.5 on 2025-07-10 16:03

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        ("groups", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ScheduledEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[("weekly", "Еженедельное"), ("single", "Разовое")],
                        default="weekly",
                        help_text="Тип события: еженедельное или разовое",
                        max_length=10,
                        verbose_name="Тип события",
                    ),
                ),
                (
                    "weekday",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Понедельник"),
                            (1, "Вторник"),
                            (2, "Среда"),
                            (3, "Четверг"),
                            (4, "Пятница"),
                            (5, "Суббота"),
                            (6, "Воскресенье"),
                        ],
                        help_text="День недели для еженедельных событий",
                        null=True,
                        verbose_name="День недели",
                    ),
                ),
                (
                    "specific_date",
                    models.DateField(
                        blank=True,
                        help_text="Конкретная дата для разовых событий",
                        null=True,
                        verbose_name="Конкретная дата",
                    ),
                ),
                (
                    "start_time",
                    models.TimeField(
                        help_text="Время начала события", verbose_name="Время начала"
                    ),
                ),
                (
                    "end_time",
                    models.TimeField(
                        help_text="Время окончания события",
                        verbose_name="Время окончания",
                    ),
                ),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(
                        help_text="Продолжительность события в минутах",
                        validators=[
                            django.core.validators.MinValueValidator(15),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="Продолжительность (минуты)",
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        blank=True,
                        help_text="Тема или название занятия",
                        max_length=300,
                        verbose_name="Тема занятия",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Дополнительные примечания к событию",
                        verbose_name="Примечания",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Событие активно и будет выполняться",
                        verbose_name="Активно",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлено"),
                ),
                (
                    "group_course",
                    models.ForeignKey(
                        help_text="Курс группы для события",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_events",
                        to="groups.groupcourse",
                        verbose_name="Курс группы",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        help_text="Кабинет для проведения события",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="scheduled_events",
                        to="core.room",
                        verbose_name="Кабинет",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        help_text="Преподаватель, ведущий событие",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="scheduled_events",
                        to="core.teacher",
                        verbose_name="Преподаватель",
                    ),
                ),
            ],
            options={
                "verbose_name": "Запланированное событие",
                "verbose_name_plural": "Запланированные события",
                "ordering": ["schedule_plan", "weekday", "start_time"],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        help_text="Фактическая дата проведения события",
                        verbose_name="Дата проведения",
                    ),
                ),
                (
                    "start_time",
                    models.TimeField(
                        help_text="Фактическое время начала",
                        verbose_name="Время начала",
                    ),
                ),
                (
                    "end_time",
                    models.TimeField(
                        help_text="Фактическое время окончания",
                        verbose_name="Время окончания",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("completed", "Проведено"),
                            ("cancelled", "Отменено"),
                            ("postponed", "Перенесено"),
                            ("partial", "Частично проведено"),
                        ],
                        default="completed",
                        help_text="Статус проведения события",
                        max_length=15,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        blank=True,
                        help_text="Фактическая тема проведённого занятия",
                        max_length=300,
                        verbose_name="Фактическая тема",
                    ),
                ),
                (
                    "homework",
                    models.TextField(
                        blank=True,
                        help_text="Заданное домашнее задание",
                        verbose_name="Домашнее задание",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Примечания о проведённом занятии",
                        verbose_name="Примечания",
                    ),
                ),
                (
                    "attendance_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Количество присутствующих студентов",
                        verbose_name="Количество присутствующих",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлено"),
                ),
                (
                    "room",
                    models.ForeignKey(
                        help_text="Фактический кабинет",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="conducted_events",
                        to="core.room",
                        verbose_name="Кабинет",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        help_text="Фактический преподаватель",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="conducted_events",
                        to="core.teacher",
                        verbose_name="Преподаватель",
                    ),
                ),
                (
                    "scheduled_event",
                    models.ForeignKey(
                        help_text="Связанное запланированное событие",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actual_events",
                        to="schedule.scheduledevent",
                        verbose_name="Запланированное событие",
                    ),
                ),
            ],
            options={
                "verbose_name": "Проведённое событие",
                "verbose_name_plural": "Проведённые события",
                "ordering": ["-date", "-start_time"],
                "unique_together": {("scheduled_event", "date")},
            },
        ),
        migrations.CreateModel(
            name="ScheduledEventCancellation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cancellation_type",
                    models.CharField(
                        choices=[
                            ("single", "Разовая отмена"),
                            ("period", "Отмена на период"),
                            ("permanent", "Постоянная отмена"),
                        ],
                        default="single",
                        help_text="Тип отмены события",
                        max_length=10,
                        verbose_name="Тип отмены",
                    ),
                ),
                (
                    "cancellation_date",
                    models.DateField(
                        blank=True,
                        help_text="Конкретная дата отмены для разового события",
                        null=True,
                        verbose_name="Дата отмены",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True,
                        help_text="Дата начала периода отмены",
                        null=True,
                        verbose_name="Дата начала отмены",
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="Дата окончания периода отмены",
                        null=True,
                        verbose_name="Дата окончания отмены",
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        help_text="Причина отмены события",
                        max_length=500,
                        verbose_name="Причина отмены",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Пользователь, создавший отмену",
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "replacement_event",
                    models.ForeignKey(
                        blank=True,
                        help_text="Событие, которое заменяет отменённое",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="replaces",
                        to="schedule.scheduledeventcancellation",
                        verbose_name="Замещающее событие",
                    ),
                ),
                (
                    "scheduled_event",
                    models.ForeignKey(
                        help_text="Событие, которое отменяется",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cancellations",
                        to="schedule.scheduledevent",
                        verbose_name="Запланированное событие",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отмена события",
                "verbose_name_plural": "Отмены событий",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SchedulePlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название плана расписания",
                        max_length=200,
                        verbose_name="Название плана",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        help_text="Дата начала действия плана",
                        verbose_name="Дата начала",
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        help_text="Дата окончания действия плана",
                        verbose_name="Дата окончания",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Описание плана расписания",
                        verbose_name="Описание",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="План активен и используется",
                        verbose_name="Активен",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлён"),
                ),
                (
                    "subsidiary",
                    models.ForeignKey(
                        help_text="Филиал, для которого создан план",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule_plans",
                        to="core.subsidiary",
                        verbose_name="Филиал",
                    ),
                ),
            ],
            options={
                "verbose_name": "План расписания",
                "verbose_name_plural": "Планы расписания",
                "ordering": ["-start_date", "name"],
            },
        ),
        migrations.AddField(
            model_name="scheduledevent",
            name="schedule_plan",
            field=models.ForeignKey(
                help_text="План расписания, к которому относится событие",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scheduled_events",
                to="schedule.scheduleplan",
                verbose_name="План расписания",
            ),
        ),
        migrations.CreateModel(
            name="StudentPresence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("present", "Присутствовал"),
                            ("absent", "Отсутствовал"),
                            ("late", "Опоздал"),
                            ("early_leave", "Ушёл раньше"),
                            ("excused", "Отсутствовал по уважительной причине"),
                        ],
                        default="present",
                        help_text="Статус присутствия студента",
                        max_length=15,
                        verbose_name="Статус присутствия",
                    ),
                ),
                (
                    "arrival_time",
                    models.TimeField(
                        blank=True,
                        help_text="Фактическое время прихода (для опоздавших)",
                        null=True,
                        verbose_name="Время прихода",
                    ),
                ),
                (
                    "leave_time",
                    models.TimeField(
                        blank=True,
                        help_text="Фактическое время ухода (для ушедших раньше)",
                        null=True,
                        verbose_name="Время ухода",
                    ),
                ),
                (
                    "excuse_reason",
                    models.CharField(
                        blank=True,
                        help_text="Причина отсутствия или опоздания",
                        max_length=500,
                        verbose_name="Причина отсутствия",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Дополнительные примечания",
                        verbose_name="Примечания",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлено"),
                ),
                (
                    "event",
                    models.ForeignKey(
                        help_text="Проведённое событие",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_presences",
                        to="schedule.event",
                        verbose_name="Событие",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        help_text="Студент",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="presences",
                        to="groups.student",
                        verbose_name="Студент",
                    ),
                ),
            ],
            options={
                "verbose_name": "Присутствие студента",
                "verbose_name_plural": "Присутствие студентов",
                "ordering": ["event", "student__last_name", "student__first_name"],
                "unique_together": {("event", "student")},
            },
        ),
    ]
